from vunit import VUnit

{{ '# Create VUnit instance by parsing command line arguments' }}
vu = VUnit.from_argv()

{# Include pre_flow_fragment (if required) #}
{% if tool_options.pre_flow_fragment %}
################################
{{ '# PRE FLOW FRAGMENT ' }}({{ tool_options.pre_flow_fragment }})
################################
{% include tool_options.pre_flow_fragment ignore missing %}
################################
{% endif %}

{{ '# AUTOGENERATED BY FUSESOC' }}
################################
{{ '# Create libraries using \'logical_name\' file attribute' }}
{% for logical_name in libraries %}
{{logical_name}} = vu.add_library(r'{{logical_name}}')
{% endfor %}
{{ '# Add all source files in target filesets to libraries' }}
{% for f in src_files %}
{{f.logical_name}}.add_source_file(r'{{f.name}}')
{% endfor %}
################################

{# Include post-flow script (if required) #}
{% if tool_options.post_flow_script %}
################################
{{ '# POST FLOW FRAGMENT ' }}({{ tool_options.post_flow_fragment }})
################################
{% include tool_options.post_flow_fragment ignore missing %}
################################
{% endif %}

{{ '# Run vunit function' }}
vu.main()
